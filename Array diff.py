'''
Ваша цель в этом задании - реализовать функцию разности, которая вычитает один список из другого и возвращает результат.

Он должен удалить все значения из списка a, которые присутствуют в списке b, сохраняя их порядок.
array_diff([1,2],[1]) == [2]

Если значение присутствует в b, все его вхождения должны быть удалены из другого:
array_diff([1,2,2,2,3],[2]) == [1,3]
'''

def array_diff(a, b):
    return list(filter(lambda x: x not in b, a))
    
if __name__ == "__main__":
    print(array_diff([-17, 0], [-13, 0, 12, 0, -17, 6, -8, 15]))
  #ожидаемый вывод: []
  
'''
Как это работает?
Сначала идёт проверка на то, что файл запущен прямо(не импортирован). Затем мы передаём аргументы в функцию array_diff().
В самой функции мы используем функцию filter(). По названию можно понять, что она необходима для фильтрации.
Фунция filter() принимает аргументы function, iterable соотвественно. В данном случае используется используется анонимная(lambda) функция и список.
Список переданный в качестве аргумента - то, что нужно отфильтровать.
lambda x: x not in b проверяет, что каждый элемент итерируемого объекта(iterable), в этом случае списка НЕ находится в списке b.
Если результат положительный, то элемент остаётся. Если условие не выполняется, то элемент убирается.
В качестве выходных данных, filter возвращает итератор(iterator). Чтобы получить список, необходимо передать результат функции filter() в функцию list() как аргумент.
И наконец возвращаем результат работы функции array_diff(a, b) используя return.
'''
  
